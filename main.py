#!/usr/bin/python3

# todo: add support for ConditionalExpression that inherited from ancestors


from binary_function import BinaryFunction
from pcode_engine import Engine
from project import Project


def main():
    # CODE = b"\xe0\xff\xbd'\x00\x00\x02<\x14\x00\xb0\xaf(\x0fB$\x1c\x00\xbf\xaf\x18\x00\xb1\xaf\t\xf8@\x00\x00\x00\x10<\xe0\x0e\x02\x92$\x00@\x14\x00\x00\x11<\xe1\x0e\"\x92\x01\x00B$\xff\x00B0\x02\x00C,\n\x00`\x14\xe1\x0e\"\xa2\x00\x00\x02<\x08\x0fB$\t\xf8@\x00\x00\x00\x00\x00\x03\x00@\x10\x01\x00\x03$\x00\x00\x02<0\x0fC\xa0\xe1\x0e \xa2\x00\x00\x02<\x18\x0fB$\t\xf8@\x00\xe0\x0e\x00\xa2\x00\x00\x02<<\x0fB$\t\xf8@\x00\x00\x00\x84\x8f\x00\x00\x02<8\x0fE\x8c\x1c\x00\xbf\x8f\x18\x00\xb1\x8f\x14\x00\xb0\x8f\x00\x00\x04<\x00\x00\x19<\xe4\x0e\x84$\xe2\x04\xa5$,\x0f9'\x08\x00 \x03 \x00\xbd'\x00\x00\x02<\x10\x0fB$\t\xf8@\x00\x00\x00\x00\x00\x04\x00@\x14\x00\x00\x02<\x00\x00\x02<0\x0f@\xa0\x00\x00\x02<\x87\x02\x00\x08\xe1\x0e@\xa0"
    # ADDR = 0x000009B4

    # CODE = b"\xe8\xff\xbd'\x00\x00\x04<\x00\x00\x02<\x14\x00\xbf\xafL\x0fB$\t\xf8@\x00\xe4\x0e\x84$\x00\x00\x04<\x00\x00\x02<\x1c\x0fB$\t\xf8@\x00\xb0\x0c\x84$\x00\x00\x02<\xd0\x08B$\t\xf8@\x00\x00\x00\x00\x00\x14\x00\xbf\x8f\x00\x00\x02<\x14\x0f@\xac\x00\x00\x02<D\x0f@\xac\x08\x00\xe0\x03\x18\x00\xbd'"
    # ADDR = 0x00000BAC

    # CODE = b"\xd8\xff\xbd'\x00\x00\x04<\x00\x00\x02<\x18\x00\xb0\xaf$\x00\xbf\xaf \x00\xb2\xaf\x1c\x00\xb1\xaf\xd4S\x84$!(\x00\x00\xa0[B$\t\xf8@\x00!0\x00\x00!\x80@\x00\x01\xf0B,.\x00@\x10$\x00\xbf\x8f\x10\x00\x02\x8e%\x00@\x10\x00\x00\x00\x00\x08\x00B\x8c\"\x00@\x10! \x00\x02\x10\x00\xa5'\x08\x00\x06$\t\xf8@\x00 \x00\x07&\x1c\x00@\x18\x00\x00\x02<!(\x00\x00\n\x00\x06$|\\B$\t\xf8@\x00\x10\x00\xa4'! @\x00\x00\x00\x02<\xdc[B$\t\xf8@\x00\x00\x00\x00\x00! @\x00\x00\x00\x02<\x14\\B$\t\xf8@\x00!(\x00\x00\x0b\x00@\x10!\x88@\x00\x00\x00\x12<\x11\x00\x04$!(@\x00\x8c\\R&\t\xf8@\x02!0\x00\x00\x10\x00\x04$!( \x02\t\xf8@\x02!0\x00\x00\x00\x00\x02<! \x00\x02h\\B$\t\xf8@\x00!(\x00\x00$\x00\xbf\x8f \x00\xb2\x8f\x1c\x00\xb1\x8f\x18\x00\xb0\x8f\x08\x00\xe0\x03(\x00\xbd'"
    # TODO: Come back to this test case
    CODE = b"<\x1c\x00_'\xbd\xff\xc8'\x9c'\xe0\xaf\xb0\x000\x00\xc0@!\xaf\xbf\x004\x00\xe0\x80!\xaf\xbc\x00 <\t\x00_\x8f\xa3\x00H\x10\x80\x00\x14\x8f\xa2\x00L\x8d%\x90<'\xa6\x00(\x10\xa0\x00\x05\xaf\xa2\x00\x10\x01\x00(!\x8f\x99\x83P\x08\x10\x0f\xb6\x00`8!\x8f\x99\x83T\x01\x00(!\x00`8!\x03 \xf8\t\x00\x00\x00\x00\x00\x02\x17\xc2\x10@\x00\x16\x8f\xbc\x00 <\x04\x00W\x08\x10\x0f\xcc$\x84;@\x8d$\x90<P\x80\x00\x14\xaf\xa2\x00\x14\x8f\x99\x83P\x00\xa0 !\x00\xc0(!\xaf\xa2\x00\x10'\xa6\x00(\x03 \xf8\t\x00`8!\x04A\x00\x07\x8f\xbc\x00 <\x04\x00W$\x84;T<\x05\x00W\x8f\x99\x80\xe4\x03 \xf8\t$\xa5P\xdc\x12\x00\x00\x18\x8f\xa2\x00(\x08\x10\x0f\xe9\xae\x02\x00\x00<\x04\x00_\xaf\xa3\x00\x10\x8f\x82\x83X\x8f\x99\x83\\\x8c\x84\x90D\x8cB\x00\x00\x03 \xf8\t\xaf\xa2\x00\x18\x10@\x00\x0c\x8f\xbc\x00 \x8f\x99\x80\xb4\x03 \xf8\t\x00@ !<\x04\x00W\x8f\xbc\x00 <\x05\x00W$\x84;l$\xa5P\xdc\x8f\x99\x80\xe4\x03 \xf8\t\x00@0!\x8f\xbf\x004\x00\x00\x10!\x8f\xb0\x000\x03\xe0\x00\x08'\xbd\x008"
    ADDR = 0x00403E7C

    # CODE = b"$\x84\x00\x01\x90\x83\xff\xff$\xa5\x00\x01\x14`\x00\x03\x90\xa2\xff\xff\x03\xe0\x00\x08\x00\x02\x10#\x10b\xff\xf9$\x84\x00\x01\x03\xe0\x00\x08\x00b\x10#"
    # ADDR = 0x00562050

    project = Project("MIPS:BE:32:default")
    bin_func = BinaryFunction(ADDR, CODE, project)

    engine = Engine(bin_func)
    # import ipdb

    # ipdb.set_trace()


if __name__ == "__main__":
    import time

    start = time.time()
    main()
    print("Elapsed:", time.time() - start)
